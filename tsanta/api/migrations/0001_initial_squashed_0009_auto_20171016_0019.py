# -*- coding: utf-8 -*-
# Generated by Django 1.11.6 on 2017-10-15 21:55
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    replaces = [('api', '0001_initial'), ('api', '0002_auto_20171015_1759'), ('api', '0003_auto_20171015_1809'), ('api', '0004_auto_20171015_1814'), ('api', '0005_auto_20171015_1819'), ('api', '0006_auto_20171015_2225'), ('api', '0007_city_freq'), ('api', '0008_auto_20171016_0017'), ('api', '0009_auto_20171016_0019')]

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('date_start', models.DateTimeField()),
                ('date_end', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_name', models.CharField(max_length=500)),
                ('alt_names', models.TextField()),
                ('slug', models.SlugField()),
                ('event_lock', models.BooleanField(default=False)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.City')),
            ],
        ),
        migrations.CreateModel(
            name='Notifications',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_sended', models.DateTimeField(null=True)),
                ('date_delivered', models.DateTimeField(null=True)),
                ('date_opened', models.DateTimeField(null=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Event')),
            ],
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('surname', models.CharField(max_length=50)),
                ('phone', models.CharField(max_length=15)),
                ('email', models.EmailField(max_length=254)),
                ('social_network_link', models.CharField(max_length=200)),
                ('age', models.SmallIntegerField()),
                ('sex', models.SmallIntegerField(choices=[(0, 'Мужчина'), (1, 'Женщина'), (2, 'Не определено')])),
                ('participation_confirmed', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.SmallIntegerField(choices=[(0, 'Text'), (1, 'Radio')], default=(0, 'Text'))),
                ('json', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Questionnaire',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_closed', models.BooleanField(default=False)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Event')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Group')),
                ('participant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Participant')),
                ('ward', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Questionnaire')),
                ('participation_confirmed', models.BooleanField(default=False)),
                ('questions_answers', models.TextField(blank=True)),
            ],
        ),
        migrations.AddField(
            model_name='notifications',
            name='questionnaire',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Questionnaire'),
        ),
        migrations.AddField(
            model_name='group',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Participant'),
        ),
        migrations.AddField(
            model_name='event',
            name='groups',
            field=models.ManyToManyField(to='api.Group'),
        ),
        migrations.RenameModel(
            old_name='Notifications',
            new_name='Notification',
        ),
        migrations.AlterModelOptions(
            name='city',
            options={'verbose_name_plural': 'Cities'},
        ),
        migrations.RemoveField(
            model_name='participant',
            name='participation_confirmed',
        ),
        migrations.AlterField(
            model_name='group',
            name='slug',
            field=models.SlugField(unique=True),
        ),
        migrations.AddField(
            model_name='event',
            name='questions',
            field=models.ManyToManyField(to='api.Question'),
        ),
        migrations.AddField(
            model_name='city',
            name='freq',
            field=models.IntegerField(default=0),
        ),
        migrations.RenameField(
            model_name='group',
            old_name='alt_names',
            new_name='_alt_names',
        ),
        migrations.RenameField(
            model_name='city',
            old_name='name',
            new_name='_name',
        ),
    ]
